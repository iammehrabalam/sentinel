title	0	1	2
1. Python For Exploit Development	"The talk is an introduction about exploit development using python , The talk will help you develop fuzz and understand overflows in the stack using assembly debuggers and python. The Talk will be based on the book ""Black Hat Python"""	Basic understanding of what are zero days and exploits, Understanding of arm architecture. Concepts like working of stack and heap.	"CTO Innov8 coworking, 
Past (CTO Of Exploride Technologies , Asia's Largest crowd funded product)"
10. An update on SymEngine, a fast symbolic manipulation library	"SymPy is a widely used symbolic manipulation library in Python. While SymPy
turns out to be very useful for many applications, one of the long term
problems with SymPy is that the speed might be insufficient when handling of
very large expressions is required. Another problem with SymPy is that due to
being written in Python, it can be cumbersome to use from other languages like
Julia, Ruby, JavaScript or C++, because it requires, say, a Python to Julia
bridge, which might not always be robust and which inflicts additional
overhead."	"For these reasons, we implemented SymEngine, an open source C++ symbolic
manipulation library, with the goal of being the fastest library for symbolic
manipulation (opensource or commercial), and allowing natural wrappers to other
languages like Python (the most mature wrapper), Ruby, Julia and others."	"We will show benchmarks against other computer algebra systems (opensource and
commercial) as well as examples of usage from Python (SymPy and Sage), Ruby and
Julia. We will present a roadmap how to port SymPy on top of SymEngine."
100. Android App Development using Kivy	While the Android App development process is already quite simple and easy to dive into but using Python instead of Java has its own advantages. This talk is mainly for Python enthusiasts who want to utilize the Python libraries to develop awesome android applications.	Kivy is an open source library for developing multi-touch applications. It is cross-platform (Linux/OSX/Windows/Android/iOS) and released under the terms of the MIT License.	Basic Python Syntax
101. Adding more features of OpenCV in C++ to Python	OpenCV (Open Source Computer Vision Library) has been extensively used for computer vision and image processing. The libraries which are used for it are highly documented for C++ but many features are not present in Python libraries. Python is a very easy to use language for even complex problems if we somehow write more and more libraries for OpenCV in python things would be really easy for many developers.	Opencv ,Python , Basics of image processing and computer vision.	I am a student in the 3rd year engineering in the branch of Computer Science .College Of Engineering and Technology,Bhubaneswar.I am a enthusiasts , hobbyist and love to try new things . I work on OpenCV, MEAN stack development and IoT stuffs. I love to read tech articles and try implementing some of them.
102. Building a Image Recognition Service with Deep learning and Python	Python, Machine Learning, AWS	"ex-flipkart, pythoniast, hacker and a explorer. 
Now working purely with python with CredR in Mumbai. "	No comments added so far.
103. Deploy python applications anywhere (Cloud, Raspberry Pi) using docker 	Docker images can deploy identically across any environment in seconds, creating a massive and growing ecosystem of applications packaged in Docker containers. In this session we will look at a continuous delivery flow of a dockerized python application. We will also look at how docker can be used with devices like raspberry pi, where we will focus on deploying a dockerized python application which controls the Lego Mindstorm Sensors/Motors using Raspberry pi and Brickpi.	Understanding of Continuous Delivery, Infrastructure as code and docker containers	Maninderjit Bindra is a Solutions Architect, and has 16 years of industry experience. He has designed and implemented several high volume, business critical applications and APIs, using open source Technologies. In his current role (Technical Evangelist with Microsoft) he helps partners, customers and developers in building scalable and resilient solutions on the Microsoft cloud platform.
104. Visualizing government reports with Python	For demonstration we pick Police Crime records and compare them across years and locations.	Pandas comes into play here.	Analysis*
105. Machine Learning with Python	Python is an indispensable tool for many data scientists. It is used in all phases of the ML workflow typically in modeling, data ingestion and processing, to feature construction to training and validation and deployment of models. In this session, we will create python scripts and use them in Azure Machine Learning Studio to construct a  machine learning experiment and also seamlessly publish them as scalable, operationalized web services. We will also demonstrate the integration of popular python libraries.	Python, interest in ML	Gandhali is a Sr. Technology evangelist who has been working with various technologies for over 15 years. Gandhali has worked with several MNCs in India and abroad, primarily in the insurance and retail domain. In her current role as a Certified Azure Solution specialist, she helps partners, customers and developers in building world-class solutions on Azure cloud platform. A graduate in computer engineering from the University Of Mumbai, Gandhali holds a Master’s degree in Computer Science from the Florida Institute Of Technology.  Gandhali currently works at Microsoft.
106. Kaggle-ing with Python	I'll keep it short.	This talk answers the following in roughly the order prescribed:	No comments added so far.
107. Big Data Analysis using PySpark	Attendees should be comfortable with Python.	No comments added so far.	
108. Interactive Data Plotting with Bokeh 	"The talk gives a basic introduction to Bokeh Python. A brief description to bokeh is provided in the slides. The slides contains introduction to special features like Bokeh Server and Bokeh Flask. This enhances the dynamic interactability of Bokeh.
Alongwith the slides I have prepared two ipython notebooks. 
One has basic plotting in Bokeh , with data extracted from a csv file using Pandas.
Another one explains a very useful feature of Bokeh known as Interactors"	None	"I am a fourth year undergrad student. Pursuing major in Computer Science and minor in Applied Maths from Shiv Nadar University. I have been programming in Python for the past 3 years, with contributions in Open Source Projects like Pandas.
I have notable research experience in Data mining (Frequent Pattern Mining to be precise) and Number Theory in Applied Maths"
109. Theano & Keras: Teaching Python to 'learn' English	"The main intention of the talk is to introduce people to Theano and Keras, one the most prominent deep learning frameworks used across the world. 
The talk is aimed to be a walkthrough to enable audience to design deep learning algorithms using Theano and develop deep-learning applications using Keras, which is built on top of Theano. "	The way through which the power of these libraries is demonstrated is through their applications. This talk will serve as a guide to one interesting application: Language Modeling using these libraries, along with various nuances in coding introducing methods to optimize the code and increasing the performance gains by running it on your GPU.	This talk aims to introduce people to Deep Learning using Python and various applications across domains, featuring NLP: An upcoming area of research with huge potentials in Industry.
11. How Robots Talk: Introducing the Robot Operating System.	Robots have arrived. From factories to space, robots are everywhere. The focus now, is on building inexpensive and intelligent robots that can think on their own. With massive development efforts being undertaken all over the world in robotics, there is a need to have a common framework that allows code and hardware sharing. The framework needs to make it easy for different types of robots to talk to each other and work collectively.	Robot Operating System (ROS) is one such framework, that is the de facto standard for robotics software development across the world. It is open source and language independent, with Python and C++ being its most popular implementations. It also provides tools and libraries for obtaining, building, writing, and running code across multiple computers. 	The talk will introduce the basics of ROS, including but not being limited to the following topics:
110. API Security Assessment (ASA) - Securing Pesky API's with Python	All API end points have a complex way of handling security principles such as Identity, Authorization and managing data. While there are some really good Web Application security products out there that do a great job of securing web applications in general. However Securing and auditing API's is more than a challenge for these products to handle. Developing an automated tool based on python that takes care of securing the API's is the need of the hour. 	Automated API Security Assessment tool developed in Python takes the pain out of testing API's for security vulnerabilities. The tool covers the following:	Interest in Security and Python
111. Dabbling with Descriptors	There are a lot of nifty features when you peek under the hood of Python. Descriptors happen to be just one of them. The talk will help you understand just what they are and how you can use them to write idiomatic code.	There are no pre-requisites. A basic understanding of OOP concepts will suffice.	N/a (coming soon)
112. Building Interactive Search Interfaces (aka chat-bots) in Python using Django and TensorFlow	There has been growing interest on shedding boring and cumbersome “search and get thousand results” interface to move towards a “conversational” interface to ease the reception of deluge of information in various web and mobile applications. While a naive search bar that simplified information extraction and delivery of web pages was the rage in early 2000s, exponential increase in data and information on the Internet is making it natural for the search bar to evolve into a smarter and responsive interface. Not only can this search bar be more responsive in terms of guiding users in an iterative aka conversation based search, but it can also be assistive in fetching information that suits the interests of different users. Sooner or later, such conversational interface will replace the old-generation search bar.	However, building such conversational interface has several technology challenges: a) the interface has to understand and extract intent from natural human inputs in terms of text or speech (this is partly done by the current generation search interfaces), b) it has to generate meaningful dialogue responses to engage users into a conversation, c) it has to understand and use context to assist users in fetching the most relevant information, and while doing so d) make the information results personalized to the user as she uses the interface over time.	How do we solve these technology challenges? Is the ‘conversational search’ a hype or soon to be reality? How are recent advances in deep learning playing their role towards building such ‘chat bots’? How can we build a real interactive search interface using existing web (or Django) and machine learning frameworks. In this talk, I will take a deep dive to answer these questions and present the state of the art in building conversational agents during Django and Tensorflow (and Python, of course!). Tensorflow is a machine/deep learning package (using Python) open sourced by Google and has several advanced features to parse user text queries and personalize search results.
113. Deep Learning fundamentals in Python: Implementing MLPs, Convnets Recurrent Nets and Reinforcement algorithms from scratch	Writing a Neural Network is one thing and making its training fast is another. For the same reason, programming a Neural Network should ideally neither be tough (as in Theano) or abstract (as in Keras). However, we have to use these frameworks to speed up the training (they compile the code for the CPU/GPU). The talk here is concerned about how can we implement these neural networks without aid of any frameworks (except numpy or autograd at worst) , so that we can strip down the complexity and see how the algorithms actually run. Bare minimal code is devoid of any complexity or abstractions and hence  we can focus on the algorithm than the framework.	Here is what we will walk through:	Implementing  a Multi Layer Perceptron using Numpy. Highlighting stages like forward propogation, backprop, training testing.
114. Put that SWAG in your API - SWAGGERIZE it	Everyone is making and consuming REST API's now a days as it's simple to consume and doesn't carry the bells and whistles like earlier complex technologies like SOAP. The Bells and whistles though at one point ensured that both client and server were tightly integrated with the help of sharable schema definitions by server to the clients. 	Swagger brings the similar kind of experience but in a much simple way to the REST API's, it helps generate the API Documentation on the fly that one can share with the clients. So lets SWAGGERize our API's and learn how to implement Swagger with Python as well as other Language based REST APIs.	REST APIs
115. Embedded visualization - Bring data to life inside your app	"Join in to learn about the magic of Power BI Embedded. As the name suggests, it lets you create visually impactful and interactive reports against your application data in Power BI Desktop, can easily explore your application data through a freeform, drag-and-drop canvas and produce rich data models using formulas and relationships.
It'll be a fun learning session with lots of colorful data visualization."	Basic understanding of data structures, wish to learn more about embedded visualization. That's it !	No comments added so far.
116. Sampling From Streams: Reservoir Sampling & VIRBs	Those of us who use Python to build systems that ingest constant streams of incoming data (which includes anybody whose code touches the internet) often need algorithms that keep a fixed-size sample from the stream for on-the-fly analytics. At Magnetic we are engaged in real-time bidding for online advertising, which also requires extremely low-latency Python code.	Reservoir sampling is a commonly used algorithm for keeping a sample that's unbiased over all events in the stream. But what if you want your algorithm to keep a representative sample from the past 10 minutes instead of the entire stream?	In this talk I'll start with a gentle introduction to reservoir sampling for those who are not familiar with it, and then discuss several variants that keep samples which are biased towards more recent events. One of these is the VIRB (Variable Incoming Rate Biased) sampler, which we have developed in-house at Magnetic.
117. Mercurial: A distributed revision control system	Willing to work on a project, want to track changes you have made, see which changes are made by whom, have the rights to decide what to include in your project what not to. Want to contribute to an open source organisation. The first thing which you should learn is Version Control System.	Python installed in their PC's.	I am an undergraduate in Computer Science who loves contributing to open source. I am also a contributor to Mercurial community.
118. Automating the complex tasks with Ansible	With increasing complexity of today's systems, it's becoming difficult to deploy your solution. Using Ansible you can take out the complexity from deployment and one can automate as much as possible. 	In this talk I will discuss about how to deploy complex Machine Learning systems using Ansible.	Python, Linux
119. Building a scalable NBA Sports Analytics Platform using Python Data Stack 	Devising strategies when the game is on based on in-game analytics is hard. Sports like basketball and soccer are free-flowing. Not long ago, most analysts used some form of aggregated metrics as the performance indicators and decisions were based on them. Examples include total points scored in the game, total rebounds in the game, etc.  But finer nuances of the game like which players were impacting the offense and defense in what ways were difficult to measure. From 2013, STATS SportVU started providing player tracking data for every single NBA game. This led to a explosion of data, leading to a greater emphasis on analytics amongst all the 30 teams. Teams were able to construct rosters using analytics. 	What are some of the challenges in designing such a system?	Python's data stack packs a punch when it comes to designing such a system. This talk covers how some of the above challenges were overcome using the Python data stack.  
12. Raspberry love for Python on IOT	Open source hardware like Raspberry Pi along with open source language like Python enables anybody to frame IoT devices. Workshop is aimed to impart knowledge about using Raspberry Pi and python to make simple devices where signals from sensors can be derived to control electronic devices and/or to make decisions. With this basic introduction about IoT  audience can innovate in their domain and come up with uniquely innovative solutions to real world problems.	"-->Basic python
-->Basic electronics
-->Raspberry Pi
-->micro SD card
-->Power adapter for Raspberry Pi
-->Connecting wires
-->Breadboard
-->Switch
-->LEDs"	"Ashutosh Kumar Singh
-->Pythonista
-->FOSS Enthusiast"
120. Natural Language processing for beginners(NLTK)	Natural Language Processing with python:	A talk about how we may leverage python(Natural language tool kit) to perform operations on text and use the same for various use cases. Basics of how to do few of the operations using NLTK and use the same in analysis.	The talk is going to be focused on how to use NLP and will include few demos of the same. Topics to be covered include processing raw text, categorization & tagging, Information extraction, and few other basic concepts.
121. Time Series Satellite Data Visualizer	Mr Umang Gupta, is currently pursuing his graduation in B.Tech from ABES Engineering College, Ghaziabad (UP, India) in Computer Science and Engineering, affiliated to Uttar Pradesh Technical University. At present, he is in third year. His area of interests include good command over C and Python languages, Data Structures using C, Data Analysis and Algorithms , Web Designing. His skills include fluent English speaking skills along with good writing skills.	Mail : umangg21@gmail.com  	No comments added so far.
122. Django Widget made easy	django Widget made easy	No comments added so far.	
123. Web Scraping for Dummies	Looking forward to this talk	Looking forward to this talk. 	"The prerequisites section could do with further detail. ""Basic knowledge"" could mean a variety of things and the audience should be clear about the expectations being set up by the speaker."
124. Complex web apps made easy using Django	Django is a super web framework that makes making complex web applications easy. 	In this tutorial, we'll create the facevote app, the one that Mark Zuckerberg made in the Social Network. Additionally, our app will have a leaderboard, vote counter etc. In the tutorial, we'll make this app from scratch, showing the various Django components along the way. By the end, everyone will have their app ready.	We will follow the best code pratices (docs, testing etc)
125. Algorithmic Music Generation	Music is mainly an artistic act of inspired creation and is unlike some of the traditional math problem.  Music cannot be solved by a simple set of formulae. The most interesting and challenging part is producing unique music without infringing the copyright. The generated music has to sound good, and what sounds good is very subjective. The model is mainly built for producing Indian music.	Artificial Neural Network/Deep Learning has wide range of application, such as in Image processing, Natural language processing, Time series prediction, etc. But what about its usage in art? This talk shows how deep learning was used to generate music.	Deep learning attempts to model high-level abstractions in data by using multiple processing layers whereas the traditional Machine learning algorithms emphasizes on what work the computer program must do after it is given a data set. The basic idea in deep learning is  to perform an unsupervised learning procedure on every single layer in addition to using gradient descent for the network as a whole. The goal of the unsupervised learning is to make each single layer extract characteristic features out of its input that can be used by subsequent layers. The neural network architecture makes use of numerous amount of Indian music to train the model. After adequate number of iterations and training time, this model generates music that is unique and  original.
126. Visualising Machine Learning Models	"This talk will introduce the audience to the ModelVis package in python, which has been developed to allow for convenient visualisation of regression, classification and clustering models.
This package gives users the power to: "	The ModelVis package is a great tool for both, data scientists who wish to look deeper into the model, as well as to an end user, for whom a visual representation of the model is easily relatable.	Basic understanding of what goes into data science. 
127. CollabFilter - A Python package for clustering items by similarity (Collaborative Filtering). 	Ever wondered how Amazon recommends items quite accurately while you were busy looking at another item? Or about how Netflix recommends a movie to you that you have been wanting to watch for a long time now? 	"A comprehensive open-source package in Python for Collaborative Filtering does not exist.
This package, CollabFilter is our contribution to developing a recommendation system in Python. It uses a lot of state-of-art data capabilities provided by the Python Data Stack. The talk will also cover briefly on a couple of use-cases where this package was used conveniently and effectively."	Basic understanding of data science and analytics
128. Open source health monitoring and evaluation systems using python	Health monitoring sensors are connected to Raspberry Pi and data collected using them is fed to python program for analysis and visualization. This enables the programmers to monitor and evaluate health of a human being. Potential use includes assisting medical diagnostics, performance evaluation of sportsperson, predicting medical emergencies etc. An Open-Source architecture enables developers to develop applications on top of the architecture which utilize the data to derive meaningful conclusions. 	"Basic python
Basic introduction to Raspberry Pi"	@vickysam Cool. Thanx for contacting. Lets chat sometimes on e-mail at sandeep.nagar@gmail.com
129. Prediction and Backtesting in stock market	"Application of Machine Learning and Sentiment analysis in stock market is worthy and I will use NIFTYBEES.NS daily data for this talk.  There would be four parts in this talk to show result, can help for better decision making to investors. Equity Research analysts can get better result using python too.
Part 1:
1. Downloading open source data and input output
2. Application of packages for prediction
Part 2:
3. Application of tweets for sentiment analysis
4. Application of scikit-learn for machine learning 
Part 3: 
5. Building simple trading strategy using MA and RSI
6. Back testing of strategy
Part 4:
7. Comparing compounded annual return, annual volatility and draw down with NIFTY."	Interesting stuff!	"Siddharth, I'll complete those slides by next few weeks and I'll write here after completion.
Any input and expectation will help me. "
13. Add intelligence to your Python apps using cognitive services	To get their apps to the ‘next’ level, a lot of developers explore the ways to add machine-based Artificial Intelligence to applications – more so, with the spurt in IoT applications and bots today. This can be challenging for a developer who has never ventured into ML and AI before. In this session, we will try to break that barrier – by using Cognitive Services in Python apps. These are a host of intelligent services which you can directly consume in your applications – such as, detecting emotions based on facial expressions, detecting and recognizing human faces in images, speaker recognition, computer vision, etc. In this talk, we will explore on how to integrate such services into Python applications, supported by live demos.	Basic knowledge of Python	Interest in AI
130. Introducing MetaClasses	"This talk is based on the metaclasses in Python.
The secret sauce which create classes."	There are no prerequisites for this talk, anyone who can write a class in python and have a basic idea of inheritance can easily follow this talk.	Slides were already trending on reddit [4].
131. The trends in choosing licenses in Python ecosystem	"The software licenses are the permissions over copyrighted software. The permission and/ grant includes the grant 
to use, 
to redistribute,
to prepare derivative works etc. 
 These software licenses also set forth the limitations over these aforesaid rights. The software licenses basically marks the boundary for the usage of the code."	Therefore from the above mentioned introduction it very clear that it is very important for developers to choose the license for their code wisely and correctly.	Pypi, the Python Package Index is a repository of software for the Python programming language. There are currently 80000+ packages there.
132. Web Scraping using Selenium Webdriver and Data Analysis with Python	Selenium is widely used for Automation testing only but In this short session we will see how one can pull the data from the web using Selenium Webdriver and then perform exploratory analysis on this data using Python modules Pandas,IPython and matplotlib, We will be scraping the data from open source website IMDB consist of Best pictures won in last 65 years in Filmfare and will see what interesting facts can be revealed from the data.	This entire exercise would be helpful for anyone who wants to understand how data can be pulled with the help of Selenium Webdriver from a website and organized using python libraries for the data analysis. During this session we would be using an open source data for analysis and see how we can draw conclusions using this data.	This Paper is presented in Selenium Conference 2016.
133. Learning about Internet Routing using python	This is going to be a talk about a mini-project, that started with a simple question. Can I find out what percentage of Internet traffic that I browse is served from India and what percentage is served from outside of India? 	This talk will basically cover at a very high level how Internet routing works and how one can use Python to find out interesting information about what's happening in Internet. 	Then I'd basically cover some interesting findings about Python while working on this mini-project - 
134. Python for image analytics (face recognition and other image analytics cases)	"We can leverage python for Image analytics work like 
1. face recognition, 
2. analysis of FMRI and other medical reports, 
3. video analysis to find copyright-wise problematic videos
4. analysis of street images to identofy ideal location  etc. This session will explain how to use Python, PyVision, OpenCV and SciPy for such work. Also, we will have some live case studies and the easy to understand code. When you leave this talk, you will be an expert in image analytics using python. "	Basic understanding of Python. 	Prasad Kothari is an analytics thought leader. He has worked extensively with Organizations such as Merck, Sanofi Aventis, Freddie Mac, Fractal Analytics, and the National Institute of Health on various analytics and big data projects. He has published various research papers in the American Journal of Drug and Alcohol Abuse and American public health.
135. Sentiment  analysis  and Web Development with flask	Basic knowledge of python	Basic knowledge of HTML, CSS 	git(very basics) 
136. Creating & publishing custom Web API to mashape API platform.	A complete tutorial on creating & deploying web API to access data from websites which does not provide official APIs.	I am Daxeel Soni, currently pusruing Bachelors of Engineering in computer engineering. I have large experience in developing python open source libraries, custom SDKs, web APIs. I am an active contributor to python open source projects.	I've developed two public APIs in python and published it to mashape marketplace. Currently both APIs have 50+ developers across the globe.
137. Developing your own Telegram Chat Bot	In this new age of Artificial Intelligence and Machine Learning, bots can do just about anything. Be it an online shopping assistant bot, a 2048 game solver bot or the most famous AlphaGo bot, we can safely assume that bots will rule the future. 	For those who are unaware, Telegram is an instant messaging app which supports the development of bots on its platform.	This workshop will focus on building your own bot for Telegram. By the end of the workshop, all participants would've developed and deployed their own Telegram bot which would be performing a task of their own choice.
138. Home Security Systems Using Python And IOT	Providing home security systems using python which will deliver us the following benefits:	DAVIK MEHRA. Pursuing Engineering In Computer Science 3 Year. Interested Keenly  In Python And Its Implementation In Various Fields Like IOT And Analytics .Presently Working On Building A Home Security System  Using Python. Worked On Python Frameworks Like Django. Worked With Iron Python, Databases Using Python. HTML , CSS With Python Implementation.	daivikmehra@hotmail.com
139. Power of Flask 	"Python Developer. Love to play with different frameworks under different languages.  KDE contributor and Google Summer of Code 2015.
Mentored Season of KDE and Google CodeIn 2015 and mentoring Google Summer of Code 2016."	Worth going to..	This one is helpful..
14. Real time Sentiment Analysis with Apache Storm and Python	Data is everywhere. How much data can we process in real time? How twitter is managing this huge data? This talk will help in understanding Big Data better. Twitter uses Apache Storm. Take a dive into Apache storm and learn more about Twitter Sentiment Analysis in Real Time.	Basic Python Knowledge	Basic Awareness of NLP is a plus though not required
140. Core python	core python programming give to the knowledge about programming with python. 	python intalled with windows, linux, mac..	"viren parmar
Python Developer at Google Developer Groups and
Organizer of Techno Club"
141. The Art of Packet Crafting with Scapy!	No comments added so far.		
142. Hacking the Python AST	Computer languages are a remarkable feat of human scientific engineering. In this talk, we'll look at the innards of Python, and specifically learn how to modify Abstract Syntax Trees (for world peace).	I'm looking forward to this. Good job @jargnar	
143. Managing a distributed, heterogeneous Git mirror network	At KDE, our git server infrastructure consists of one master git server that accepts pushes, a network of read-only anongit servers, and a GitHub organisation which hosts another read-only copy of our repositories.	We typically need to create new repos, rename and move existing ones, and finally delete unused repos. All of these operations have to played on our master server, the anongit mirrors and to whatever extent possible, our GitHub org. We have to keep the mirrors in sync, poke CI when all the mirrors are up-to-date, and notify the admins when something goes wrong. Managing all of this is a big task, especially when networks are bad, servers don't sync and daemons crash.	To solve this problem, what started out as a set of ad-hoc scripts became a full blown piece of server software built to manage a fleet of git mirrors. In this talk, we'll describe how we use Python, Redis, Tornado and other libraries, with a home grown task queue, to solve all of our problems.
144. Demystifying Monolithic Vs Microservice  architecture 	"Where does the confusion arises . The Good and Bad sides of both the styles . Suitability , best practices and the best options available in Python .
Comparative viewpoints of different Python based frameworks (Django, Falcon, Flask , Bottle , etc ) for building rest APIs via both the architectures .   "	Hey, can you add some slides or more info about the project.	Sure . I am in the process of creating them . Will put them up as soon as i finish them up . 
145. Python for Healthcare - Medical Terminologies for Python: UMLS, SNOMED CT, ICD10 | HL7	At the end of the talk attendees will have a different perspective for using python in healthcare.	Can you please update the speaker's profile section to showcase why are you a good fit to give the talk on this topic?	Hi Kushal,
146. Pagure Jenkins Interaction	"It is one of the project that we are working on in the Pagure team,
the aim is to make a service which triggers the Jenkins build and monitor it.
Then fetches the build status and attach a label to the Pull Request."	"Audience can expect to get deep insight about Pagure, a general understanding of how Jenkins work.
For that reason they get to know what Jenkins is. They get to know how they can write a service and 
monitor builds and trigger builds in Jenkins."	Pagure is a light-weight git-centered forge based on pygit2.
147. Building a secure IoT platform using Paho and Flask	MQTT and COAP are very common light weight protocols for IoT development.  One area that developers overlook during initial development is making it secure from day 1. This session will focus on a couple of approaches to make the interaction between the device and data collection server more secure and reliable using  HTTPS based key exchange and signed MQTT packets.  Paho is a light weight and easy to use library that handles most of the pub/sub, marshall/unmarshall, data transformation tasks.  Second area that we focus is getting maximum data from the device that will help you with diagnostics in early stage of development.   In addition to flask and paho, this session will touch upon sqlalchemy.  Whole platform design will rely on  micro-service architecture and hence the talk will introduce you to some components available in python, such as airflow.	Jaimon Jose is  Co-Founder and CTO of PicoNets where he focuses on building next generation picoCDNs, a different approach to content caching and delivery.  Prior to starting PicoCDN, he worked with a startup focusing on air pollution and built a pollution data layer using various sensing devices. 	"He ended his corporate life as Distinguished Engineer and Member of the CTO team in Novell, responsible for technical vision and strategy.  As an Identity and Security expert and a CISSP,  he used to focus on security aspects of emerging technologies including BYO{D|I} and Big Data.  He believes that a lot of innovation and solutions will evolve in the mobile computing domain and that will be a trigger for the accelerated cloud adoption.  His research areas included identity analytics using Big Data and predictive analytics that leverages disparate sources like physical, virtual and cloud. 
 
He represented Novell in standard organizations like IETF, OpenGroup and DMTF and is a co-author of DMTF cloud interoperability standard.  Jaimon is a regular speaker at various conferences  in India and abroad including InterOp, Silicon India, BrainShare and other industry-academia collaborations. "
148. BigData Analytics and Visualization in Flask framework	You should have basic knowledge of the following:	Hey, I'm a python programmer working as a Software Engineer in a young start-up company based in Bangalore	No comments added so far.
149. MySQL, Python and MySQL Shell for Python	We'll talk about X Dev API for Python. The new ‘X’ plugin allows MySQL to be used as a document data store while retaining the ACID compliance of the RDBMS. MySQL announced the MySQL Shell for Python and Javascript which can be used to interact with MySQL and access data in tables or JSON documents. The Shell has several new features and totally changes the way you’ve traditionally interacted with the MySQL server.	Basic understanding of the databases.	Nitin is an open source professional with over 13 years of experience. He has worked in various capacities in database architecture and management roles. He’s employed at Oracle and is currently part of the global pre-sales team, helping and educating customers and community in various projects. He's also been a speaker at various technology events.
15. Scaling Django with Kubernetes	"It has always been advised to architect our apps to both scale, fault/load tolerance and be resilient 
to arbitrary failure.  Most services are implemented as a container under the hood. Traditionally,
you would deploy django to some virtual machine instance.  PaaS has been the buzz word for quite 
sometime now, and is paving way for CaaS - Container as a Service. Containers, most often use Docker 
to produce immutable, isolated and quick to sign up application images."	With containers there have been few known challenges:	How do multiple containers talk to each other?
150. Make Your MySQL Server Installation More Secure	Data in databases is turning into the most valuable asset modern companies can have. Making MySQL more secure is easy. Thus let's Learn about the little things that can make a huge difference in preventing, deterring, and analyzing malicious attempts. See how they affect the availability and the usability of the server. Learn how to avoid common mistakes when deploying your MySQL database and how to secure your database with multi strength layers.	Know basics about Database.	"Megha Singhvi is a Open Source Evangelist with detailed working experience on MySQL. She is working as a MySQL Technical Principal Consultant at MySQL - Oracle India. She looks after the  regions like India, Srilanka, Bangladesh, Nepal and have multiple hands on experience with MySQL. She is MySQL certified.
Multiple time Speaker at OSI, PyCON Singapore, PyCON India in past, talked in couple of Oracle events & also spoke as a guest in various company events."
151. Test Automation using Python and Robo Framework	Automated testing is you best bet to boost the efficiency and broaden the scope of your software testing. Robot Framework is a keyword-driven test automation framework, written in Python. It empowers testers to automate and manage complex workflow scripts efficiently.	Basic knowledge of Python	"Around 7.5 years of professional experience in object-oriented, client/server, and web-based applications of software development and automation; major technical skill area included Free and Open Source Software (FOSS) such as Python and Django with proficiency in KDB, MySQL, and PostgreSQL databases
Good exposure to each of the phases of Software Development Life Cycle (SDLC), developing projects from stage of concept to full implementation. Worked on ETrading Automation and Took Workshop's in IIT Hyderabad."
152. Ansible: Python based Next Gen Configuration Management and Provisioning	Basic knowledge of Python and YAML	Looks good...	"I'd recommend turning this talk on its head. Instead of ""a gentle introduction to Ansible"" (which is a good thing, but fairly mundane), how about building up good habits in beginners and showing them how some of the common problems/pitfalls from code -> deploy can be managed via Ansible?"
153. Web Development with Django and MongoDB	Now a days many people are using MEAN (MongoDB, Express, Angular, Node ) for web development because MongoDB is Schema less Database . The idea is to develop Schema less application using Django with MongoDB as a database	Schema Less or Non-Relational Schema Design	If you come from a relational background a non-relational database may seem counter-intuitive or completely odd since most non-relational databases are document and multi-key oriented and provide a different method of querying and excluding data.
154. A Sublime Plugin, With Backend Service In Bottle, and Going Live Using OpenShift	In this session, 	Developing REST Service and Hosting in OpenShift	Creating Sublime Plugin
155. Scraping to the rescue	Also we'll be going through some real world example codes to give the attendees a gist of what all it takes to successfully extract the data they require. At the end we'll mention some scraping ethics to be aware of so that one doesn't end up putting anyone in trouble.	"Do you happen to have a list of useful websites which could be scraped and such? I am suggesting that a bunch of ""ToDo"" or, ""Now that we have shared our knowledge, how about you/the audience consider working on these sites"" kind of list."	There's a fine line between scraping a site and DOSing a site. Please explain to the audience the importance of not accidentally bringing the site down.
156. Scaling Django To The Sky	This proposal is to explain the tips and tricks of scaling a Django project to handle millions of requests  with a simple and elegant stack. This talk explains how efficiently developers can use 	You should have idea of following:	last October, I gave a talk on distributed databases in PyCon India 2016 .
157. Flying A Drone	This talk i will the learnings from my experience of programming  CrazyFlie (Quadcopter) With python.	So this talk will cover,	"I've worked in different Tech Stack, Python, Java, Ruby etc, and have used many frameworks, built applications end to end.
Have exposure to Test Driven Development, Continous Integration/Continous Delivery, Agile etc.
I am experimenting with Auto Pilot Drone, also learning Machine Learning, functional Programming"
158. Demystifying Python's Method Resolution Order	"This talk is based on the method resolution order which defines the ""class search path"" used by Python to search for the right method to use in classes having multi-inheritance."	Brief Background: It all started with a post by Samuele Pedroni to the Python development mailing list on 1 Oct 2002. In his post, Samuele showed that the Python 2.2 method resolution order is not monotonic and he proposed to replace it with the C3 method resolution order. Guido agreed with his arguments and therefore now Python 2.3 uses C3.	Hence, Python uses two algorithms for method resolution order. The Old MRO algorithm is very straight forward but the new one is not so easy to bring out. I will be discussing and explaining both the algorithm and I would also be talking a a bit about the background of this change and the benefits of new C3 Method Resolution Order.
159. Measuring Semantic Similarity between sentences in Python	"The talk will cover a set of approaches to measure semantic similarity between phrases. Concretely, consider the following sentences. ""Harry is running fast"" and ""Harry is Sprinting"". Traditional word-matching algorithms fail to capture the semantic overlap between such phrases. Such similarity scores form essential parts of systems for Information Retrieval (IR), Question Answering, Automatic Grading and several other Natural Language Processing applications. 
The talk will also briefly discuss a Propositional Logic Generation System (PLGS) that converts sentences in natural language to their propositional logic representations. 
For instance, the sentence ""Harry is running fast"" would be represented as:-
 - obj(Harry, o1)
 - run(o1, e1)
 - prop(e1, fast)
in propositional logic. Such propositions form the bedrock of powerful reasoning systems for question answering and Information Retrieval. "	The audience is expected to have a brief idea about the meaning and applications of natural language processing. Some familiarity with the nltk package in Python would be useful but not essential.	"""Measuring Semantic Similarity between sentences in Python"" should probably read ""Using Python to measure semantic similarity between sentences""."
16. Audio Fingerprinting and Shazam-ing	This talk focuses on the idea of how an audio classification app, like Shazam, works. 	The talk would consist of the following sections : 	Understanding the basics of music signals and histograms 
160. From start to finish a restless api in flask without the flask-restless framework.	Python and ubuntu.	At the time of writing this proposal I'm a 3rd year 6th semester B.Tech student pursuing computer science engineering.I love programming in python but again who doesn't?	Can you please update your profile to showcase your experience about flask?
161. Analyzing Stock Markets with Pandas and Matplotlib	Pandas is an amazing framework that makes data processing in Python highly efficient and fun. In this workshop aimed at Pandas and Matplotlib beginners, following will be discussed: 	Participants should be comfortable programming in Python.	Head of Technology at Tyroo Technologies, India's largest ad tech company. Worked previously at Inmobi, Akamai, SAP and Infosys. In 2007, started out a casual unconference style entrepreneurship focussed meetup group called Open Coffee Club in Bangalore which today has more than 15k members and is one of the most active and vibrant grassroots entrepreneurial community in Bangalore. 
162. Creating Lint Bears with coala	"coala is a simple COde AnaLysis Application. Its goal is to make
static code analysis easy while remaining completely modular and
therefore extendable and language independent."	The audience should have a little knowlegde of Regex, basic Python skills and Git knowledge to contribute to upstream. If the participant is contributing for the first time, he/she will be introduced to the git workflow and how to contribute. 	I'm a final year Computer Science undergrad and have been dabbling with Python since 2 years now. I'm also a student for coala (Python Software Organization) under Google Summer of Code'16 
163.  Demystifying the Django Rest Framework	This will be an intermediate tutorial on Django Rest Framework. For a first time user, DRF presents a ton of magic. Things work, but you end up not knowing or understanding what is happening behind the scenes. If you would want to tweak something, you wouldn't know where to start or what to look at.	I've had quite a few frustrating moments trying to figure out what method mapped to which action, and which ones to override when. The fact that DRF does not impose the REST architecture confused me to a good extent as well. Nested relationships was another beast which was hard to tame.	This tutorial will build an app - not a full fledged front end design but the endpoints that are required, and will showcase implementing endpoints using complete abstraction that DRF provides including Routers, ViewSets and builtin Serializers as the first step.
164. Web development with Django and MongoDB	1 - Introduction to Django	2 - Introduction to No-SQL databases	3 - Introduction to MongoDB
165. Testing native binaries using cffi and py.test	I've been working a native cross platform library to gather system information. The long term intention is to make bindings for it in various languages. The whole thing is written in C and it's somewhat hard to write unit tests for these kinds of libraries.	The talk will cover some basics of writing python bindings using CFFI and then writing unit tests using these. As a bonus, a small py.test plugin which can be used to measure the unit tests coverage of the C library will be presented. 	Basic knowledge of C (and related infrastructure). 
166. Finding Usage Patterns for Bots & Suspicious Users From Raw Logs Using Map Reduce	"Bot detection and usage patterns of specific users is a major cause of concern for a e-commerce website, and with scrapping affecting live-traffic to the tunes of affecting performance to almost 90%, it has become a prime focus area in the world of security.
Standard web application firewalls can help detect these Bots, but only basis of predefined rules/rates.
Using map/reduce and analyzing access logs, we try to analyze behavioral patterns of a user and address them as bots, or a suspicious user and throw alerts for the same."	"Logging Layer
1. Using Fluentd to capture logs either from file/or syslog or UDP/TCP 
2. Filtering these logs
3. Forwarding these logs to Kafka "	"Queue Layer
1. Parsing the logs in a queue using Kafka"
17. Getting Started with OpenStack Python SDK	"The OpenStack Python SDK is designed to improve developer experience by consolidating the various OpenStack python- client libraries and command line interface into a unified, well designed, and user-focused SDK (""Software Development Toolkit""). "	In this talk, we'd like to discuss what the Python SDK is, how it is designed, and how one can use OpenStack Python SDKs.	"With a consumer application requiring various individual pythons clients to install, each with different APIs and nuances, it becomes increasingly difficult to consume OpenStack clouds. The python-OpenStack SDK project proposes a new project with a single API namespace (""OpenStack"") that would provide users with a single point of entry and series of supporting functions/methods from which to build applications and tools."
18. Binary Analysis and Exploitation using Python	I am a 4th year Computer Science student from IIIT Delhi. I am currently doing RSoC with Radare2 and an internship with Appknox (both works related to binary analysis). I participate in a lot of CTFs and I love to work with Binaries, trying to understand what they do and how to go about exploiting them. I also have experience in Network Security and anonymity and am currently working on a research project on Decoy Routing.  Besides that I really love opensource. I have contributed to a lot of organizations including Libav, KDE, Sugarlabs, Radare2. I have participated in GSoC before and have been winner of Google Code in 2012 and 2011. 	No comments added so far.	
19. Comparison: AWS vs OpenStack, choose what is better for you	Get your mind clear with, in which terms Amazon Web Services (AWS) and OpenStack equals/differs with each other. This talk will help to those who want to explore AWS or OpenStack infra services.	In the world of Infrastructure as a Service, AWS and OpenStack are on boom. Both Services have their own pros and cons in terms of types of services, features, support, user environment etc. They also have some services that are common in both. In this talk we will compare Amazon Web Services and OpenStack on various factors:	There is not strict prerequisite for audience but familiarity with any infrastructure service will help to understand the stuff.
2. Don't write tests, generate them!	"Property-based testing (or Generative testing) is an interesting way of testing
your code by defining properties of your code, and testing that they hold with
random input."	"This talk aims to give an introduction to Property based testing in general,
and to Hypothesis in particular. The talk will:"	"The audience should be comfortable reading Object oriented Python code, that
uses decorators.  Experience in writing unit tests would go a long way to help
appreciate the talk."
20. Services and Python	No Prerequisites	Public Profile:	Open Source Contributions:
21. Clustering in PySpark	What with Big Data being the flavour of the decade and ML on distributed computing gaining prominence, this talk focusses on our experiments with the various clustering algorithms currently available in PySpark. We will discuss various challenges in data munging, scaling and optimization, feature encoding with mixed variables and the many Spark gotchas that we tripped on. We finally provide a code walkthrough of our soon to be open-sourced implementation of a clustering algorithm which we developed to bridge limitations of existing algorithms.	Understanding of basic clustering, basics of MapReduce and Spark.	Hariharan C is a data scientist at Mad Street Den. He builds artificially intelligent data products for e-commerce. Data hacker. ML wielder. Wannabe quiz-geek. Man-U fanboy.
22. Using Actors in Python with Pykka	"Dealing with concurrency in Scala, then Akka framework is the recent buzz of the town. Isn't it. But what if you are Pythonista? Huh?
So no Akka framework in Python. No Actors in Python. No futures in Python?
Ah, wrong if you think that."	We have Pykka to the rescue. Our angel. :P	You can have the same super cool, fast, efficient actors in Python too.!! 
23. PyProfound :  How to train the best machine learning model with zero lines of code ?	Building a machine learning model is easy but getting that elusive 1 percent increase in precision/recall when you are already in the high nineties is as frustrating as it is to watch Sachin bat through his 90s.	Adding to the complexity in finding the best machine learning model for your particular use-case, is the prerequisite of knowing any of the myriad data-science centric programming languages like Python, R or Julia and a knowledge of extracting the best features from the available dataset. Pre-processing the data to handle missing values, categorical features and columns with low information content becomes as important as the algorithm you have chosen.	PyProfound is an open-source desktop application built using electron.js and Python, that takes a dataset of your choice and returns a machine learning model which scores the best on cross-validation among all combinations possible on Scikit-Learn. 
24. Observations from a Python programmer learning Go lang	Go (often referred to as golang) is an open source programming language created at Google. Unlike Python which is an interpreted language, Go is compiled. A few projects have moved from using Python to Go lang lately. This talk summarizes observations made when a Python programmer learns Go.	Topics that I wish to cover:	This aim of this talk is only to share experiences of learning Go for people coming from Python background and not to claim which one is better. 
25. Creating chatbots with jatayu framework	A basic knowledge of python is required.	I received an email saying Reviewer01 has left a comment, but I can not see it here after login.	The framework is ready to use right now. However by the time the event is held I expect many more features to be added to the framework.
26. Asyncio and Service Oriented Architecture in Python	The talk will cover	No Prerequisites. However a little knowledge of asyncio library in python would go a long way.	Kashif Razzaqui, Director of Engineering at Kayako, Head of Engineering @ 1mg, Tech Lead @ Directi(Flock)
27. Attack of Pythons : Gotchas and Landmines in Python	"Python may be one of the simplest and most flexible programming languages out there, but it is still a programming language. It still has syntax, datatypes, and some occasional dark corners. Python ""warts"" are things for which people have criticised Python, typically aspects of the language or mechanisms of its implementation, because such aspects either expose certain surprising inconsistencies, are regarded as omissions, or cause irritation for parts of the community in some sense."	This talk will be about common pitfalls (termed warts/landmines) that people face using Python programming language.	"The only pre-requisite is that you must have some basic familiarity with Python programming language.
Although it'll be good that you have laptops with Python2 already setup, it's not required as such !"
28. Automation using Behavior Driven Development (BDD) Framework	"behavior-driven development (BDD) is a software development process about how software development should be managed by both business interests and technical insight. BDD is largely facilitated through using natural language constructs (e.g., English-like sentences) that can express the behavior and the expected outcomes.
Our talk mostly focuses upon:
1. Why BDD?
2. How it helps in Automation
3. Other similar frameworks
4. Benefits of BDD over other automation frameworks
5. Short Demo"	"Expected Outcome:
1. Get familiar with a useful and emerging framework
2. Get started with Automation if you haven't already, in a easy way"	Understanding of Python, some hands on experience in Automation, knowledge about Selenium.
29. Crypto 101 ( The basics of security )	This talk will literally cover the basics of cryptography . I will touch following topics ( in each topic i will explain what it is ?  , what are it's implementation ? and how secure/unsecure it is ) 	No Prerequisites as i will start from very basics !! Most of the talk will be high-level talk with some  background working of some topics . 	No complex maths is involved .  
3. Using Django Rest Framework in IoT!	Generally creating your own IoT product is considered to be a hassle especially when you want to handle your IoT device across multiple platform e.g Mobile devices etc. The most generic solution to such a problem is creating an API for the same and hence enabling device interaction via multiple interface. I would give some uses cases which I have practically implemented using DRF and [Arduino+Raspberry Pi]	"The following talk would stress on the following points : 
- IoT [Just a misnomer??]
- IoT & Python [Best Buddies!!]
- Handling Request/Response from your IoT device using API
- Analysing device feasibility
- Testing your API along with Hardware [Test Cases, Unit Testing (gist)] 
- Use Cases [ Primarily Educational, for social causes etc. ]"	That's All Folks!
30. Python for Artificial Intelligence	Python has been one of the easiest and most flexible language to use in the domain of Artificial Intelligence for years now. Since its inception , the community has witnessed a lot of emerging libraries and packages being released to make the working even easier. There is hardly any other language with such great support from a very healthy community of computer enthusiasts. 	This workshop is primarily showcasing the use of emerging python libraries in domains of various fields of artificial intelligence. The fields we would be covering would be Speech Recognition, Artificial Neural Networks, Deep Reinforcement Learning and finally Reinforcement Learning. 	We would be covering these ideas with understanding codes for a project in each domain:
31. Unit testing 101	This talk aims to introduce attendees to unit testing in Python using the built-in unittest module and also emphasize on how crucial unit testing is. mock is a Python testing module that allows you to replace parts (methods, classes etc) of your application with mock objects and make assertions about how they have been used.	This talk aims to primarily touch upon the following topics:	"What is NOT a unit test ?
Why do you need mocking ?
Monkey Patching
Where, why and what to patch
Mocking network calls and I/O"
32. Catching Python 3	There is lot of advancement in adoption of Python 3  lately. If you're still using Python 2.x in your project(s), this talk is for you.	The focus of the talk is on the following	Some experience with Python 2.x is preferred, although not mandatory.
33. Creating a recommendation engine based on NLP and contextual word embeddings	How can we create a recommendation engine that is based both on user browsing history and product reviews? Can I create recommendations purely based on the 'intent' and 'context' of the search? How do I use natural language processing techniques to create valid recommendations?	This talk will showcase how a recommendation engine can be built with user browser history and user-generated reviews using a state-of-the-art technique - word2vec. We will create something that not only matches the existing recommender systems deployed by websites, but goes one step ahead - incorporating context to generate valid and innovative recommendations. The beauty of such a framework is that not only does it support online learning, but is also sensitive to minor changes in user tone and behavior.	The trick/secret sauce is - How do we account for the 'context' and build it in our systems? The talk will answer these questions and showcase effectiveness of such a recommender system.
34. Building Companion Technology with Python	This talk would cover the intricacies of developing a chat bot with python and pyAIML.	Though we are not yet on the brink of great development as shown in robotic movies, chatbots have been marching ahead	The talk aims to cover the following points:
35. Python for BASH	Python's excellence in handling shell for UNIX administration. Will show the power of Python to simplify the way we execute shell codes.	Rookie 	I love Linux kernel !
36. Power of python excel - Data Logging for System Performance Analysis	To benchmark any software product, we often need to to performance analysis of the system along with the product . This tool monitors the cpu, memory and load average of the system and collects the data in excel sheet in regular intervals of time and plots the graph with that data if it is needed.	Basic Knowledge of Python	Arthy Loganathan works at RedHat as software QA Engineer
37. The Power of Python in an Enterprise-Class Healthcare Company	"A case-history talk about our use of Python at ZeOmega, a healthcare software
company based in Bangalore, over the last 14-years, and how Python is still
very vibrant and solving hard enterprise problems such as:"	No prerequisites as this is a case-history talk at a high-level about the various libraries and services available.	"While some of the software mentioned will be new to some number of attendees, I will carefully explain what
it is and how it is useful.  I will avoid buzzwords and acronyms."
38. Getting up and started with graphical user interface using Gtk+	Ever felt bored coding applications for same old command line. If so, get ready to fill your applications with all sort of widgets, colors and animations.	This talk is all about getting you ready to build graphical applications using GTK+: one amongst the finest multi-platform development kit for creating graphical user interfaces. The main focus of the talk will be on using PyGObject (not to be confused with PyGtk; the old stuff) with in between insights into graphical programming in general including topics such as X Windows Selections, Client side decorations (CSD), etc.	If the names above just did not make any sense to you, do not worry. The talk will include everything from the very basic. While this talk won't be able to teach you everything, it will throw light on the trending technologies and help you avoid the obsolete.
39. Talking to Machines : Optimizing Neural Networks with Theano	And while some of this often looks like 'black box' magic, we lose sight of the fact that the ideas are based on extensive research with rigorous mathematical foundation. The talk aims at introducing some of these concepts through Theano, a Python library, extensively used just not in the Deep Learning community, but the scientific community generally. 	In the discussion, we delve deeper into optimizing Deep Neural Network architectures with Theano, with focus on the VQA task mentioned above. This helps exploring how several state-of-the-art approaches like Convolution Neural Networks (CNNs) and Recurrent Neural Networks(RNNs) come together in an architecture to develop interesting algorithms.	Familiarity with the following would definitely help appreciate the talk :
4. Python Structures - The Best in Class for Data Analysis and Visualization of Big Data	Data Analysis and Visualization are two major areas of Data Science where a programming languages contribution in various aspects are critical. It could be the smartness of the data structure, its performance, arrangement and access variance, computation,  code ease and maintainability. It also means the design patterns that are possible for the different processing of data.	Python, Data Science/ML Concepts, Data Visualization methods	I am 16 years experience developer currently managing the engineering team of a major product company in India.
40. Ensemble Models	It is relatively easy to build a first-cut machine learning model. But what does it take to build a reasonably good model, or even a state-of-art model ?	Ensemble models. They are our best friends. They help us exploit the power of computing. Ensemble methods aren’t new. They form the basis for some extremely powerful machine learning algorithms like random forests and gradient boosting machines. The key point about ensemble is that consensus from diverse models are more reliable than a single source. This talk will cover how we can combine model outputs from various base models(logistic regression, support vector machines, decision trees, neural networks, etc) to create a stronger/better model output.	This talk will cover various strategies to create ensemble models.
41. Helix and Salt: Case study in high volume and distributed python applications	The tech talk is going to discuss Salt as a case study of an on going project at LinkedIn to evaluate Helix to manage clusters of Salt Masters to alleviate problems caused by a very lopsided salt master to salt minion ratio. The tech talk will use salt as a case study to demonstrate how high volume python applications can be written to be managed by Helix.	Apache Helix is a generic cluster management framework used for the automatic management of partitioned, replicated and distributed applications hosted on a cluster of nodes. Helix automates reassignment of resources in the face of node failure and recovery, cluster expansion, and reconfiguration. Apache Helix was originally developed at LinkedIn to manage some of our high volume applications	Saltstack's Salt is a remote execution and orchestration tool, counted in the company of other tools such as puppet, chef ansible etc. LinkedIn has one of the largest deployments of salt anywhere in the world.
42. An example-driven guide to writing effortless, fast tests with pytest for your Django project.	I’ll be going over the following topics 	Why you should write tests.	Sneaking tests into your code.
43. MyHDL - From Python to Silicon	"With the surge in no. of hobbyists using FPGA for their projects, it has become one thing to look out for.
MyHDL is python library enabling people to develop simple pythonic code which is lot easier to read and develop than standard Verilog and VHDL languages, that can also be used to program FPGAs.
The proposal is to get the audience acquainted with MyHDL, its ease of use and short learning curve, especially from beginners perspective, empowering them to get started implementing real projects in a very quick manner. My GSoC (and my fellow GSoCers) experience developing cores using MyHDL will be used extensively as an example case."	"OUTLINE:
 -- Intro : Who am I?
 -- Briefing of FPGAs and the standard languages(Verilog and VHDL). (5 min)
 -- MyHDL briefing. (5 min)
 -- Difference between general(sequential execution) vs FPGA(parallel execution) programming. (5 min)
 -- Few FPGA program examples highlighting MyHDL simplicity and ease to learn and use compared to the standard HDL languages. (10 min)
 -- Present an outline of development stages of a more complex FPGA project using MyHDL using my GSoC experience as an example. (10 min)
 -- Wrap up and questions if any. (5 min) "	Python 3.5, Awareness of FPGAs.
44. Deep Learning 101	"Most of the time we hear buzzwords like Recurrent Neural Nets, LSTM etc But don't know what is all that jargon and how or why these things works, This talk is intended to be a decent introduction to Deep Learning (No boring history lessons or the typical ""neurons in brain"" talk). 
The agenda will be to start by building a simple Deep Learning Neural Network with one hidden layer in core python(No frameworks) then move on to give an introduction on Convolutional Neural Nets(these are really good for object detection in images) and finally end by building a Recurrent Neural Net . 
The goal is to give you a soft launch into the Deep Learning, from there on you should be able to fly with your own imaginations."	Topics going to be covered are:	I am a Product Engineer at Profoundis. We built Vibe, A  B2B Data Intelligence solution for Sales and Marketing. I started off with Data Sciences during my Post Graduate Days and have been an ML enthusiast ever since.
45. Getting Started with Ansible	"Ansible is an IT automation tool that can be used to configure, deploy
and orchestrate many different Infrastructure based tasks. Ansible can
be used for system configuration, software deployment, application or
infrastructure orchestration, more importantly it is agent less and no
master/slave configuration required for it. It uses yml to write
playbook which is readable and easy to manageable, did I not mention
it's comes with batteries included."	This workshop aims to hands-on upon the following topics:	No comments added so far.
46. Unit Testing with Python	"Emphasize the need for unit testing Python code, and provide the
necessary tools and techniques to get started with unit testing."	"The talk is aimed at people who are familiar with Python basics, and
would like to improve their skills, by learning how to write professional
quality Python code."	"Fortunately Python's own standard library makes it easy to write unit
test cases, by providing the needed infrastructure. Through this
workshop we would like to make a strong case for unit testing, and
then show how to use the available frameworks for writing test
cases. We will also cover how dependencies can be isolated using
mocking and faking. We then move beyond writing test cases and cover
reporting, code coverage and CI integration."
47. Good Bye, Call Stack; Hello, Event Driven Architectures!!	"This talk will focus on building applications using Event Driven Architectures(EDA). The talk will begin with an introduction to EDAs and will end with a brief description on how Pipeline Engineering team at DreamWorks Animation uses it.
Some of the key takeaways would be:
    1) What are EDAs?
    2) How does it eliminate call stacks?
    3) Other advantages of incorporating EDA 
    4) Things to watch out for in EDAs
    5) Testing your system
    6) An example of how EDA based system will look like."	Basic knowledge of programming in any language and computer architecture.	Anvith Shivakumara is working as Pipeline Engineer at DreamWorks Dedicated Unit(DDU), Bengaluru. A IIIT Bangalore alumnus, his interests lies in every technology that would help him build systems that scale. At DDU, he is a Python developer with most of his efforts going into back-end development. He is also exploring ways to monitor applications using ELK stack.
48. Exploring PyUnit	"This talk provides an introduction for pyunit test framework  and  will discuss techniques for developing pyunit testcases  which serves as a tutorial for developers new to Python, and as  a cheatsheet for experienced developers.
Key Takeaways:
1. why PyUnit
2. How to create PyUnit Testcase
3. Develop Testsuite.
4. Generating reports in text/Html
5. Test Fixtures.
6.  PyUnit Assertions.
7. Developement of Testsuite for sample application"	Participants are expected to have basic working knowledge of Python.	I, Jaya K,  is working as a Senior R&D - QA Engineer in Dreamworks Unit, Technicolor and have 13 years of experience in QA and automation framework development. I worked on developing various test frameworks for GUI, RestAPI, client testing using Perl and Java.  I have used python for data analysis also.  In Dreamworks Unit, Technicolor, i had the opportunity to test python client. With knowledge of Junit, transitioning to the development of pyunit test is cinchy.
49. Talking to Machines : Optimizing Neural Networks with Theano	And while some of this often looks like 'black box' magic, we lose sight of the fact that the ideas are based on extensive research with rigorous mathematical foundation. The talk aims at introducing some of these concepts through Theano, a Python library, extensively used just not in the Deep Learning community, but the scientific community generally. 	In the discussion, we delve deeper into optimizing Deep Neural Network architectures with Theano, with focus on the VQA task mentioned above. This helps exploring how several state-of-the-art approaches like Convolution Neural Networks (CNNs) and Recurrent Neural Networks(RNNs) come together in an architecture to develop interesting algorithms.	While most of the topics are introduced in the talk from scratch, familiarity with the following would definitely help :
5. Linguistics 101 - Natural Language Processing in Python with NLTK	A look at how Natural Language Processing(NLP) can be used to identify meaningful information in a text. 	"We will begin by exploring the features of the NLTK library, and then we will try to develop a language aware data product using a a topic identification and document clustering algorithm from a web crawl of blog sites.
The clustering algorithm will use a simple Lesk K-Means clustering to start, and then will improve with an LDA analysis."	The NLTK library exists with a pre-existing set of definitions and a means of work flow. By studying this we will get a feel for the various features and functionality that NLTK has to offer. But since everyone has very diversified requirements, therefore during the later part of the session we will build a topic identification and document clustering algorithm from a web crawl of blog sites using NLTK in a codelab. 
50. Teach the lazy snake some functions!	This talk will be about using Python for functional programming. Functional programming is a programming paradigm wherein computation is treated as evaluation of mathematical functions and avoids changing-state and mutable data. A regular programmer can use a lot of constructs inspired by the functional paradigm and Python supports the same. The talk will be focussed on a practical programmer's view of adapting to functional programming rather than abstract functional technique. The audience will be able to clean up parts of their daily code using functional style.	Nothing as such though the audience with prior Python experience will be able to relate to the examples and think of ways to improve their code on a daily basis.	No comments added so far.
51. Python Byte Code Hacks	"The objective of the talk is to show people how interpreters in
general and the CPython interpreter in particular, is
implemented. While this is not really required for people to use the
Python, it depeens people's understanding of how modern interpreted
languages work."	Links to recordings of previous talks at conferences / meetups:	I have made contributions to the Linux Kernel, U-Boot, Qemu and the Linux Testing Project.
52. Network Analysis using iGraph Python Library	In this workshop, we will focus on iGraph python library to mine complex network datasets. It is an open source efficient tool to analyze graphs.	"Following points will be covered in the session:
1. Generate a graph using raw data,
2. A short overview of basic operations on the graph,
3. Understand Structural properties of the graph using iGraph inbuilt functions,
4. Community detection and its intricacies,
5. Visualization of the Graph"	"Technical Requirement:
1. Install Python
2. install iGraph Library"
53. Social Network Analysis using Networkx Library	In this workshop, we will focus on the python networkx library that is highly used to mine complex network datasets.  	"We will be covering these points in the session:
1. Store and Process real world networks using different formats
2. Analyze properties of real world networks
3. Analyze properties of the network at node level
4. Identify Meso-Scale structures in real world networks such as, Facebook Network, Citation Network, etc.
5. Epidemic Models to explain Information diffusion, opinion dynamics, and so on."	"Technical Requirement:
1. Install Python
2. install Networkx Library"
54. Python based REST APIs and their usage across hybrid mobile applications	Representational State Transfer (REST) is an architectural style defining a set of design constraints rather than a concrete system for building web applications. With the advent of REST architecture, network efficiency and scalability has experienced a considerable improvement helping developers to build cleaner APIs to access their web applications. This talk focusses on building RESTful web services and REST APIs in Python and Tornado enabling a coherent backend solution for variety of front-end Javascript frameworks based mobile applications. 	"During our presentation we will cover the following topics:
- Fundamentals that should be kept in mind to build Python based REST APIs.
- Elaborating why Python and Tornado are a good choice for building a RESTful web service and REST APIs. Also, a brief explanation of request handlers in Tornado responsible for making the APIs RESTful will also be included.
- Demonstration of platform-independent storage REST APIs which can be integrated in cross-platform and hybrid mobile applications. With the help of storage APIs, developers can save and retrieve the application data in CSV, JSON or any other format.
- Live demonstration of REST APIs for storing and retrieving images across applications. The images are sent to the server as an encoded base64 data and returned as a URL. If you require a service to host your logos and signatures, this image REST API can be of easy use.
- Creating pdfs using the pdf REST API. We will explain how pdfs can be returned embedded in an email from the HTML content sent by the client mobile application. This API is useful for developers in requirement of rendering their HTML data into pdf format. 
- Client side implementation of the various REST APIs using AJAX requests. This can be directly imported into any cross platform hybrid application to be able to gain access to various REST APIs."	Mini Bhati works as Product Engineer at Aspiring Investments Corp, a software development firm focussed on enterprise and finance spreadsheet platform for PC and Post-PC devices. She has gathered experience working on all stages of software engineering as a full stack developer. Her wealth of experiences include software design and development of numerous tablet and mobile applications, developing REST API services and incorporating it in more than 250 apps, software implementation for use cases spanning a range of industries.
55. Open Event Organizer Server using Flask	Open Event Organizer Server is an open source project by FOSSASIA, which helps event organizers to create events, make custom session forms, schedule sessions on a scheduling calendar system and also provides API services to use the information from the organizer server in websites or mobile applications. It helps to assign different users different roles such as organizer, speaker, co-organizer,etc. You can also customize email notifications received for various purposes. Unlike other event organizing web applications, it is open source, more customizable and can be used independently.	A little knowledge about Flask framework would help.	I am a web application developer and open source enthusiast. I am in 3rd year of B.Tech Information Technology course in IIIT Allahabad. I have been associated with open source organization FOSSASIA for about a year now and am a participant in Google Summer of Code 2016 under FOSSASIA. My preferred languages are python and javascript.
56. Learn to use cryptography library 	"cryptography is a package which provides cryptographic recipes and primitives to Python developers. Our goal is for it to be your ""cryptographic standard library"". It supports Python 2.6-2.7, Python 3.3+, and PyPy 2.6+."	cryptography includes both high level recipes, and low level interfaces to common cryptographic algorithms such as symmetric ciphers, message digests and key derivation functions. For example, to encrypt something with cryptography's high level symmetric encryption recipe .	"Why a new crypto library for Python?
If you’ve done cryptographic work in Python before, you’ve probably seen some other libraries in Python, such as M2Crypto, PyCrypto, or PyOpenSSL. In building cryptography we wanted to address a few issues we observed in the existing libraries:"
57. Scaling up Python with Microservices	This talk is aimed at discussing about how a regular web architecture could be broken into a Micro service based architecture that is able to support high concurrency and also provide a flexibility to build individual micro services into different technology stack as per need and requirements. This enables internal communication over RPC with minimal overhead and high concurrency.	"Past experience in Web architecture. 
Familiarity with standard network protocols.
Familiarity with event driven programming.
Experience with scalable and concurrent systems is a plus."	No comments added so far.
58. Building an automatic keyphrase extraction system using NLTK in Python	Ever wondered how Google search shows relevant results first even though the query you searched belonged to the results on Page 2 also (in a nutshell how the famous Google Page Rank works) or how your post get's automatically categorised in Quora or how Medium groups articles into clusters based on the article's context? 	"Extraction of important topical words and phrases from documents, commonly known as terminology extraction or automatic keyphrase extraction is a hot topic in the research field. It comes under one of the crucial tasks in natural language processing for purposes of automatically extracting structured information from unstructured (text) datasets.
Keyphrases provide a concise description of a document’s content; they are useful for document search, clustering, categorization, and summarization; help in building a content based recommendation system as you can quantify semantic similarity with other documents. 
Since we are producing raw data now more than ever, clustering and contextualizing data becomes a more difficult task. With the help of Python and specifically NLTK it becomes a tad bit easier. "	My talk will provide information regarding methodology, keyphrase selection (unsupervised and supervised methods), algorithms which help us quantify weights relative to document corpus followed by a step wise guidance on building a decent keyphrase extraction system using NLTK in Python.   
59. Quality data analysis using Python	The analysis of such data specific to product and process quality has so far been done using closed source applications (such as SAS, SPSS and Minitab), but the opening up of the Python based open source frameworks and libraries gives us an opportunity to analyze such data using Python and its various libraries. What's more, this opens up new avenues to use advanced machine learning and visualizations.	In this talk, I'll deal with some of the applications of the libraries, functions and approaches you find within Python's data science stack, and its application to the problem of analysing product and process quality data. Some aspects of the talk will be:	The target audience for this may or may not come in with some industrial experience in products, processes or quality management. They're however expected to know some Python and should be aware of some of the broad functionality within the Python data science stack.
6. Deploying your python backend with (almost) zero cost	Gone are the days when you had to provision and maintain servers full time and pay huge costs for it (even though it is idle 99% of the time). The world is going serverless where someone else takes care of running your code automatically whenever you want. 	And NO! This isn't the usual cloud servers where you pay for the full hour. You pay in multiples of 100ms intervals of when your code executes and don't even have to pay a dime if no execution occurs. 	I will be presenting a real world code with a hands-on demo of how you can easily deploy your python code - be it a simple script to process your log files or handle HTTP API requests to return JSON responses. I would also talk about where you can't use lambdas and also workaround for those use cases.
60. A partial differential equation solver using Numpy, Scipy and Matplotlib	This talk will detail how Python (and its libraries) can be used to write a compact solver for a partial differential equation (PDE) solver which describes the evolution of a physical system. Numpy's vector operations and Matplotlib's advanced plotting capabilities can be used to solve the equation and then vary physical parameters.	A PDE is a differential equation which contains functions of several variables. Thus the derivatives involved are partial derivatives. PDEs are a crucial part of physics as they accurately model the behaviour of real systems. Their solution occupies a large amount of the time consumed on large scale high performance computers for tasks such as computational fluid dynamics, computational mechanics and computational electromagnetics which are used for modelling systems as diverse in size scale and complexity as climate and environmental modelling, the Universe, cars, planes, trains, ships and optical devices.	In our school curricula, we learn analytic solutions to basic differential equations. However, most equations of interest cannot be solved analytically and must be solved numerically. Here is where the features of the language used to write the solver becomes important. Python has some amazing features which makes it suitable for use in such cases.
61. Financial Modelling and Simulation with Python: using Numpy, Scipy, Matplotlib and Pandas	"This Talk is about evolution of Python as a major technology used in Finance.
These days various Financial Models are been simulated using python scientific libraries with amazing capabilities of Analysis, Calculation with higher order mathematical equations  and statistical modelling complimented by Ploting libraries with 2D Graphs, Charts and Histograms."	Knowledge of Basics of Python and Libraries like Numpy, Scipy, Matplotlib and Pandas .	You can find me at:
62. Building a Recommendation Engine using Python	"Ever wondered ""How did you find an old school buddy on Facebook, just like that?"" , ""How Spotify suggests you songs you haven't listened but are matching with your listening habits?"", ""How E-Commerce websites recommends you products you might like?"". Well, the answer to all these question is one-Recommendation Engines. From millions of products existing on a website, it is very difficult for a user to land on a product of his need as well as his choice. But with the inception of Artificial Intelligence, a few algorithms were introduced to perform this difficult task and with the progress in technology, these algorithms were refined as well as customized as per the user requirements by various organizations. In simplest way, Recommendation Engine learns about your behavior with different techniques and recommends you products that seems suitable for you according to the algorithm."	"In this talk I'll cover the following topics with code in Python:
1. Recommendation Engines
2. Types of recommendation Engines.
3. Step wise guidance to make an engine- Data Acquisition, Data Cleaning, Implementing various models.
4. Problems faced during developments of recommendation systems.
5. Metrics used to measure the accuracy of a recommendation engine.
6. Functions that can help to improve your engine for better results as the data gets bigger.
7. Importance of Recommendation Engines on an economical level especially for Startups."	The audience must have basic knowledge of programming (not necessarily with Python). They need no prior knowledge in Machine Learning but they must have interest in this field to be able to enjoy the talk.
63. Decorators 101	This talk covers the basics from functions to decorators in python. How can we make use of the power of decorators to apply the common functionality throughout the most part of our code.	After all these topics you will good enough to start hacking on them and make your code mode DRY(Don't Repeat Yourself).	No prerequisites required as such, just a basic understanding of how functions in Python work.
64. Your first patch to OpenStack	Have you been thinking of making your first contribution to OpenStack but not sure where to start?	Right from Installing DevStack, to selecting a bug, interacting with the community, taking help on the IRC, testing your fixes on DevStack,  submitting your first patch with git review, getting your patch reviewed under the gerrit review system, till finally getting your patch merged to master, this talk will acquaint you with the workflow and show you how easy it is make your first contribution. 	Having gone through the same process ourselves, after this talk we will make sure that you have the required knowledge to land your first patch upstream.
65. Generators Inside Out	This is a hands-on workshop that provides in-depth introduction to generators in Python.	Good experience of Python and familiarity with generators in Python. If you have never used generators before this workshop is not for you.	All the participants should have a laptop with Python 3.5 installed.
66. Django Reduxed	"Having a service oriented architecture in web projects require interfacing the
backend using a REST-ful interface. Building your website as a single page app
allows you to focus on building the API up front, rather than duplicating your
efforts to build a website and then replicating the functionality with an API.
With a single page app, your website can be constructed in much the same way as
a mobile app. Django and the Django REST Framework enabled my team to quickly
deliver a highly functional REST API that was customised to our unique needs."	"React is a great tool to keep UI organised, but won't keep
track of the data and state of application. Redux comes to rescue over here -
it defines a minimal but sufficiently powerful way of interacting with that state.
An action from the UI is combined with a simple JS object(state).
Redux helps developers manage the state and flow of data around an application."	"One of the strengths of redux is that everything is very explicit.
It eases out the process of managing the state and flow of data
around an application. Imagine tons of asynchronous actions without introducing
annoying UI bugs."
67. Testing REST API's made easy with Requests & Unittest Module and Performance test using Locust	This talk will demonstrate how  to do API testing with Python Requests Module and Unittest and showcase Lifecycle of a HTTP request from beginning to end. In this entire session we will take a demo application and see how the API can be tested with request and unittest module and for the same application we will run performance test using locust.	I. Overview of Requests and Unittest module and short demo to showcase how powerful requests library is for testing and test case management with unittest module	II. Testing a Demo application with Requests and unittest module.
68. Building AWS Cloud Infrastructure using Python SDK	"In this talk, we will try to brief about Cloud computing and the core components of AWS, and how we can deploy and manage AWS Cloud infrastructure using Python
Brief Agenda:"	Introduction to Cloud Computing	Quick brief - AWS Components and Services
69. Document your code (Sphinx workshop)	To learn how to write documentation for your code-bases. Documentation is the key for communication and developers are the best person to start writing it. Projects can succeed or fail because of their documentation.	In the workshop the people will be introduced to reStructuredText & sphinx. Starting from quick-start of a project to document organization, code and topic cross-referencing, indexing. We will also go through running tests from your documentation, initial ideas on themes and deployment in readthedocs.	Participants should have the following package installed on their computers
7. Information Security - Where Python Sucks, Survives and Excels	This Presentation from me is going to be on the Information Security aspects of Python code at various layers of the language and application development stack. It will cover aspects from its fundamental language flaws and advantages, libraries, loopholes, misfires and many more.	Python and some basics of Information security	Hi,
70. Realtime microservices with server side Flux	The talk will be organized as:	No comments added so far.	
71. Deploy Python application on OpenShift-v3	OpenShift-v3 is built around the applications running in Docker containers, scheduling and management support provided by the Kubernetes project, and augmented deployment, orchestration, and routing functionality on top. 	Talk Agenda:	Praveen Kumar is a Software Engineer currently working at Red Hat. At Red Hat his focus is to create tools around container ecosystem and  Dockerfiles for different services. In his free time he contribute to Fedora project as RPM packager. He has been a speaker at FUDCon, GNUnify, Flock, FOSSAsia, Jenkins User Conference, Docker-Meet and delivered talks on Docker, Ansible, RPM packaging, Git, Jenkins and various other topics.
72. Real time web apps using django-channels	"I'll demonstrate a complete talk on real time apps using django-channels.
It includes discussion about -
1. django request response cycle
2. websockets
3. django channels and groups
4. deployment of real time apps"	"Python,
Sound knowledge of django"	Hi I'm a django developer and love python. I'm a contributor to pinax organization and freelancer as well.
73. Data Collection Using Raspberry Pi 3.0 and sensors using Python Workshop	"I will demonstrate a complete IOT solution for the folowing:
1. Data collection using temperature and moisture/humidity sensors via ATMEGA, 
2. Processing the collected data using a Raspberrry Pi 3.0
The data is available to the end user to his disposal. If time permits, I will further expain sending messages to the user about spikes and surges,etc."	Python 2.7, Raspberry Pi 3.0, ATMEGA Controller Knowledge.	I am one of the eleven Directors of Python Software Foundation, and the founder of Pyladies Bangalore, India. I have written a book on Python programming and I love teaching Python programming to others.
74. Data Collection Using Raspberry Pi 3.0 and sensors using Python	"I will demonstrate a complete IOT solution for the following:
1. Data collection using temperature and moisture/humidity sensors via ATMEGA, 
2. Processing the collected data using a Raspberry Pi 3.0
The data is available to the end user to his disposal. If time permits, I will further explain sending messages to the user about spikes and surges, etc."	Python 2.7, Raspberry Pi 3.0	I am one of the Directors of Python Software Foundation. I also founded the Pyladies Bangalore chapter.
75. Python Gotchas	"Python aims to be a clean and consistent language that avoids surprises. However, there are few edge cases that can be confusing to newcomers  or sometimes even the experienced ones. 
If you are not aware of these gotchas, you might conclude that the language is poorly designed when you come across it in production.
Some cases are intentional but can be surprising, for example"	"It might seem strange at first glance, but it makes more sense once you are aware of the underlying
reasons for the surprises.
This will be an interactive talk where I will be talking about these gotchas with lot of examples and the audience will be able to guess what/why python behaves the way it does."	Basic python.
76. Symbolic computation with Python, SymPy	In this tutorial we will introduce attendees to SymPy, a computer aided algebra system (CAS) written in Python. We will show basics of constructing and manipulating mathematical expressions in SymPy, the most common issues and differences from other computer algebra systems, and how to deal with them. We will mostly show how to solve practical problems with SymPy and SymEngine. This will include showing how to interface SymPy with popular numeric libraries like NumPy.	Attendees will take home an introductory level understanding of SymPy. This knowledge should be enough for attendees to start using SymPy for solving mathematical problems and hacking SymPy's internals (though hacking core modules may require additional expertise).	SymPy is a pure Python library for symbolic mathematics. It aims to become a full-featured computer algebra system (CAS) while keeping the code as simple as possible in order to be comprehensible and easily extensible. SymPy is written entirely in Python and does not require any external libraries. The tutorial will cover the following topics and more.
77. Python and Robot Framework - Beyond the obvious	Working knowledge of Python and Understanding of what is Robot framework/any keyword driven framework will be good	Working as an Automation Architect for Skyhigh Networks, Bangalore. Has been working on designing and implementing automation solution for DLP solution of Skyhigh	The talk looks interesting. The LinkedIn link is broken, can you please fix it.
78. Token based Authentication system using JWT (JSON Web Token)	JWT is standard for making authentication token. JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and encrypted.	Unlike session based authentication, Token based authentication system takes very less load of server. In session based authentication system, maintaining of session storage is requires processing and storage. While as Token based authentication system, it is not required to maintain session storage at server side. Tone of processing and storage will be saved. Beauty of using JWT as authentication token is it's simplicity. Once token is created, it is possible to authenticate user without touching the database again. Token can be discarded when it is expired by time from the expire time mentioned in token itself. The JWT is self contained token which has authentication, expire time information and any other user defined claims digitally signed. 	JWT can be used to provide Token Based Authentication system at your ReST API. Because JWT is self contained with required claims it is possible to scale API without depending on Authentication server. 
79. Optimizing Deep Convolutional Neural Networks for Speed and Performance	In this talk, I will be focusing on techniques to run the DCNNs as efficiently as possible in terms of :  	There will be a few strategies taught which will allow the neural networks to train and run much faster on CPUs without compromising on the accuracy. A few of them will be changing the neural network itself, which others will focus more on using tools to enhance performance. I have ran very deep neural networks in real-time on CPUs using some of the techniques which will presented. 	The latter half of the talk will be focused on increasing performance in case there is very little data. I have personally achieved accuracies of above 90% using Deep Neural Networks when there are only a few hundreds of images available as training data. I'll be sharing some of those intuitions in this talk, including concepts like initialization, normalization, tweaking the learning rate, regularization, when to finetune and when not to etc. 
8. Exploring science and electronics with Python & Box0	Box0 — Free/Open source tool for exploring science and electronics anytime anywhere	Box0 — started with the idea of providing learners educational resources and tools that gives the freedom to discover science, technology and electronics by doing and sharing knowledge with others.	Box0 helps you learn about electronics and computers and how these are useful for studying physical, biological, chemical or some other phenomena.
80. Plyer: platform-independent Python wrapper for platform-dependent APIs.	"Plyer (Platform independent compatibility layer) is a library for accessing features of your hardware / platforms. 
Plyer provides access to features like Bluetooth, Camera, NFC, Notifications, Calling and others that are commonly found on multiple platforms. 
It's aim is to make it so you don't have to think about wrapping all these features on your own because it's already done, you just need to import them."	Supported platforms by plyer:	This talk will also include some introduction of Pyjnius and Pyobjus tools which gives access to Objective-C and Java code dynamically.
81. Automate the automation - SoapUI/Jmeter tests to Robot tests	Robot framework is a keyword driven framework written in python and it has excellent set of libraries available for web, mobile and web services automation. And it has excellent reporting too. At times, teams take decision to move from one tool/framework to other due to one or more major blocking points in existing setup. This activity is time taking. 	We should go in direction to automate the migration process as much as possible.	In this talk, we will see the migration of a sample project on jmeter/soap to robot framework or may be in any other form.
82. Building Business Apps using Frappe Framework	Frappe is an open source, full stack, opinionated web framework that is ideal for building business apps like accounting, web-shops, ERPs, CRMs, expense tracking and similar apps. Features include:	The talk will introduce the framework with a quick walkthrough and building a simple library management application	"Frappe Framework is ""Made in India"" licensed as MIT, used to built ERPNext, a popular open source ERP application."
83. Productive Coding with PyCharm	Modern Python development has become quite sophisticated, with large projects using many dependencies and multiple programming technologies. Some Python developers prefer an integrated development environment (IDE). PyCharm provides a powerful, mature IDE for Python and other technologies such as web development.	Installation of Python 3.5.1 or later	Installation of PyCharm Professional (either 30 day evaluation or licensed version)
84. Complete IOT solution with raspberry-pi, arduino and a array of sensors.	IOT is the future and in the talk I would like to talk about the following in details:	Raspberry-pi, Python 2.7.6+ ,Arduino basics, MEAN/Ruby on rails(for the API),D3 for the Weather-pi(talk would be explanotary)	I am a student in the 3rd year engineering in the branch of Computer Science .College Of Engineering and Technology,Bhubaneswar.I am a enthusiasts , hobbyist and love to try new things . I work on OpenCV, MEAN stack development and IoT stuffs. I love to read tech articles and try implementing some of them.
85. Docker Workshop	Linux containers e.g.Docker is becoming a standard for packaging , delivering and running applications. There are lot of innovation happening in Linux container eco-system and it relevant and useful for Python developers too.  The objective of this workshop is to make docker container technology familiar to attendees Attendees should be able to start using and experiment with docker after the workshop.	Basics of docker	Running containers using docker
86. Packaging your Python application for Fedora	Many people are preferring writing code in Python language. Be it Python 2 or Python 3 or compatible code to both the versions. I would like to present how you can package your Python code for Fedora.	The contents for my talk will be	By attending this talk the audience will understand how a python application or package is maintained in distribution like Fedora. The same knowledge can be applied to maintain an application in the enterprise distributions like CentOS, RHEL.
87. Asynchronous Programming with Python	As a programmer, each one of us begin their programming with sequential execution of a program loop. But as we build more and more complex applications, there exists a need to do some input/output which should not block the execution of your program. You maybe tempted to use threads but it has it's own memory constraint. To your rescue comes, Asynchronous Programming. This talk will discuss more on the drawbacks of processes/threads and build a case for asynchronous programming. At the end of the talk, a demo will make things much clearer.	Participants are expected to have basic working knowledge of Python and socket programming.	Priyank Trivedi works as a Backend Engineer at Zenatix Solutions, an energy analytics startup. At Zenatix, he heavily uses asynchronous programming paradigm to manage incoming stream of time series data from numerous sensors. Priyank have worked with twisted, an event-driven networking engine in the past. 
88. MicroPython - Porting python to microcontrollers 	Have you ever worked on embedded system projects? Does that challenge your C skills? What if you have a python interpreter running on a bare metal microcontroller? Then you should have a look at MicroPython project.	MicroPython is a lean and fast implementation of the Python 3 programming language that is optimised to run on a microcontroller. The MicroPython board is a small electronic circuit board that runs MicroPython on the bare metal, and gives you a low-level Python operating system that can be used to control all kinds of electronic projects. 	Running an interpreter based programming language in a microprocessor with an OS is considered to be easier than running a the same in a microcontroller environment ,where you won't get the luxury of the RAM (System memory) and available ROM ( It can be flash or EEPROM etc.).
89. CentOS Community Container Pipeline	"CentOS Community Container Pipeline: To give confidence and reliability to the container world, we have developed pipeline to build container for upstream projects. This pipeline is having very easy entry, with a simple pull request in yml file. 
Once the project is part of pipeline it has got the below benefits. "	If there is and change/update in the dependencies pipeline will build an updated image and notify user	Pipeline will automatically track the changes in source code repo and in git push it will build image and notify the user. 
9. Think your python code is slow? Learn how to measure and improve the performance	Many of us blame python for being slow. Ever thought it's not python's fault all of those times. May be it's our code that is at fault. It is useless trying to blindly optimize a program without measuring where it is actually spending its time. There are many things that can be measured on our code. This talk will focus on profiling different parts of your program like line by line analysis, memory used by each objects, memory leaks, objects that causes these memory leaks, etc. The profiling and analysis will be done using python standard libraries and also using some open source libraries.	When you walk out of this talk, you would be a better programmer and appreciate the finer details of python.	Basic python
90. Choosing a license for your free and open source project. 	Everyday many new  projects are getting started in Github or in pubic domain. Github it self has more than 10 million free and open source projects(FOSS). A lot of projects choose to be open source but they do not chose a license. The bigger issue is  less awareness around the role of a license in a free and open source project. 	The goal of this talk to create awareness on this topic and it will cover following topics :	Importance of free software or open source licenses.
91. Revisiting Strings, Unicodes and Encoding	Everyone sort of knows how strings, unicodes and encoding works. But then again, no one really does. Here is a visit back to the basics, so that we can unlearn a lot of things, relearn a whole set of new concepts and discern the differences between python 2 and 3 in this regard. 	"Basic python syntax.
Lots of confusions w.r.t unicodes, strings and encoding."	Can you please update you talk to show what all things you will talk? The current state of the proposal does not give any idea about the details.
92. Automating Open Source Intelligence (OSINT) using Python	Open Source Intelligence is the art of collecting information which is scattered on publicly available sources. With evolution of social media and digital marketplaces a huge amount of information is constantly generated on the Internet (sometimes even without our conscious consent). This is of great concern for organisations and businesses as chances of confidential data floating in the public domain may seriously harm their business integrity. Similarly from a pentester's perspective it is important to collect as much information as possible about the target before going for the kill.	Sudhanshu Chauhan is an information security professional and OSINT specialist. He has worked in the information security industry, previously as Senior security analyst at iViZ and currently as Director and Principal Consultant at Octogence Technologies. Sudhanshu has also written various articles on a wide range of topics including Cyber Threats, Vulnerability Assessment, Honeypots, Metadata etc and Co-authored ‘Hacking Web Intelligence’.	Shubham is an active Information Security researcher at NotSoSecure, with 4 years of experience in offensive and defensive security, with interests in Infrastructure security and OSINT. He has given training, conducted numerous workshops and delivered talks at local security chapters and multiple conferences, including Nullcon 2016, Null Delhi and Bangalore chapters, etc. In his free time, he loves to craft open source tools in python, and if the weather is nice, he loves to ride his bike. Twitter handle: @upgoingstar
93. Introduction to Machine Learning in Python using Scikit-Learn	"This workshop aims for a thorough introduction to Machine Learning utilizing the excellent python library Scikit-Learn.
The workshop will have the following goals"	The workshop will utilize a 80-20 approach between practical and theory that will enable the attendees to better grasp the topic. The workshop will have exercises for the attendees to attempt as they learn.	A basic understanding of Python.
94. Continuous Integration for Data Scientists	This talk is about debugging, scaling and ultimately deploying a prototype of a machine learning application to a production system.	Broadly, the development and maintenance stages of a machine learning product can be broken down as follows:	In a live project, these steps may not necessarily be separated in time, in that it may not be possible to do one after the other sequentially. Engineers normally need to keep rising, lathering and repeating these steps to get a workable product out. The point of this talk is that some of these stages are very repetitive and can be automated.
95. Writing a Regex Engine in Python	Topics covered:  	Did I mention this is in pure Python? Yep, this is pure Python.	"I'm a Masters student at IIITM-K currently working on my Masters' Thesis.
I love building things with Python, blogging, writing articles for OSFY and so on.
I've been swimming in Python for about 5 years now, and absolutely love it."
96. Building scalable and Intelligent IoT Solutions with Python and Azure	In this session we will show the power of Python running on IoT Devices and communicating with Cloud. We will talk about security considerations and challenges with Internet-of-things devices. Most importantly we will make this service more intelligent by adding Machine Learning aspect and Power BI for visualizations.	As a Technical Evangelist, Abhishek helps developers adapt to the latest technologies. He is a Devices and gadget enthusiast and loves exploring various boards. Previously, he was a consultant at Microsoft focused on Web stack, Azure, Cross-Platform Client Dev, and Game development. He is a regular speaker at Technology Conferences – TechEd, User Groups, OSI days, Droidcon, etc. Prior to Microsoft, Abhishek was working at Infragistics – a leading UI/UX company. He has worked extensively on HTML5 and was awarded the Microsoft MVP award for his contributions on Client Web Technologies, while working outside Microsoft.	No comments added so far.
97. Multi-Modal Sentiment Analysis using Deep Learning	"The workshop is to be divided in two parts:
1. Using deep learning for processing sentiments in sentences and short-texts. [By Mimansa]
2. Using image processing in OpenCV for processing sentiment of images posted. [By Sairam]"	The workshop would then aim to go over the plausible applications that it could have.	The textual part of the talk aims to cover the following topics under NLP:
98. Packaging python to RPM (Red Hat, Fedora, CentOS...) format	After this talk everyone will be able to understand packaging and can package a standard python software into RPM format	Here is the preview of talk	Interesting one. Hoping to see this in PyCon 2016
99. Rapid Application Development with Kivy (A Cross-Platform Python Library)	Now a days, there are many ways with which you can develop an application for the multiple devices and the leading technology which is in use worldwide is 'Android'. But as a Python enthusiast i would like to present a not so popular python package 'Kivy', with which we can develop an application in quite lesser time.	I will be covering these topics:	Introduction to Kivy
